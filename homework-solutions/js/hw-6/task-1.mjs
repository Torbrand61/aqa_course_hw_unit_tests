// 1. Цикл for..of в массиве
const forOf = [];
//   - Создайте массив [1,2,3,4,5,6,7,8,9,10]
const array_1 = [1,2,3,4,5,6,7,8,9,10];
//   - Создайте цикл for..of, бегущий по массиву, в котором будет реализована следующая логика:
for (let number of array_1) {
//     если элемент четный - возведет его в квадрат
//     если элемент нечетный - возведет его в 3ю степень
//   Значение добавьте в массив 'forOf' 
  if (number % 2 === 0) {
    forOf.push(number ** 2);
  } else {
    forOf.push(number ** 3);
  }
}
console.log(forOf);

// 2. Методы массивов
//   - Создайте массив [1,2,3,4,5]
let result;
const array_2 = [1, 2, 3, 4, 5];
//   - Добавьте в конец массива число 6 соответствующим методом
array_2.push(6);
//   - Добавьте в начало массива число 0 соответствующим методом
array_2.unshift(0);
//   - Удалите элемент с индексом 2 из массива соответствующим методом
array_2.splice(2, 1);
//   - Удалите последний элемент из массива соответствующим методом
array_2.pop();
//   В результате вы должны получить массив [0, 1, 3, 4, 5], присвойте в переменную "result"
result = array_2;
console.log(result);

// 3. Деструктуризация массивов
//   - Создайте массив [3, 11, 32, 7, 20]
const array_3 = [3, 11, 32, 7, 20];
//   - Через деструктуризацию получите в новые переменные первый, второй и остальные элементы массива
const [first, second, ...rest] = array_3;
//   Пример: [1,2,3,4,5] => first === 1; second === 2, rest === [3,4,5]
console.log(`first === ${first}; second === ${second}, rest === ${rest}`);

// 4. Конкатенация массивов
//   - Создайте массив с числами [1,2,3,4,5]
const array_4_1 = [1,2,3,4,5];
//   - Создайте еще 1 массив с числами [6, 7, 8, 9, 10]
const array_4_2 = [6, 7, 8, 9, 10];
//   - Используйте спред оператор
//   Создайте переменную mergedArray, который будет хранить значения из массивов 1 и 2
const mergedArray = [...array_4_1, ...array_4_2];
console.log(mergedArray); 

export { forOf, result, first, second, rest, mergedArray };
